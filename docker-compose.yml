version: '3'

services:
  # Create an MQTT broker
  mosquitto: 
    image: eclipse-mosquitto:latest
    command: 
      - /bin/sh
      - -c 
      - | 
        sh mosquitto.sh "${MQTT_PORT_TCP}" "${MQTT_PORT_WEBSOCKET}" 
    network_mode: "host"
    volumes:
    - type: bind
      source: ../packages/utils/test_utils/mosquitto.sh
      target: /mosquitto.sh

  # Create Postgres database
  postgres:
    image: postgres:14.5
    environment:
      - POSTGRES_USER=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    ports:
      - '${POSTGRES_DATABASE_PORT}:${POSTGRES_DATABASE_PORT}'
    network_mode: "host"
    healthcheck:
      test: pg_isready -U ${POSTGRES_DATABASE_USERNAME}
      interval: 3s
      timeout: 10s
      retries: 5

  # Create an instance of mission database
  mission-database: 
    image: ${MISSION_DATABASE_IMAGE}
    command: ["--port", "${DATABASE_API_PORT}", 
              "--controller_port", "${DATABASE_CONTROLLER_PORT}", 
              "--db_port", "${POSTGRES_DATABASE_PORT}", 
              "--db_name", "${POSTGRES_DATABASE_NAME}", 
              "--db_username", "${POSTGRES_DATABASE_USERNAME}", 
              "--db_password", "${POSTGRES_DATABASE_PASSWORD}"]
    network_mode: "host"
    depends_on: 
      postgres:
        condition: service_healthy

  # Create an instance of mission dispatch  
  mission-dispatch:
    image: ${MISSION_DISPATCH_IMAGE}
    command: ["--mqtt_port", "${MQTT_PORT_WEBSOCKET}", 
              "--mqtt_transport", "${MQTT_TRANSPORT}", 
              "--database_url", "http://localhost:${DATABASE_CONTROLLER_PORT}"]
    network_mode: "host"

  mission-simulator:
    image: ${MISSION_SIMULATOR_IMAGE}
    container_name: mission-simulator

networks:
  default:
    name: isaac-network
