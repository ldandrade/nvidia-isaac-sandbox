version: "3.3"
services:
  mosquitto:
    image: eclipse-mosquitto:latest
    volumes:
      - ./mosquitto.sh:/mosquitto.sh
      - ./mosquitto-config:/mosquitto/config
    command: /bin/sh -c "chmod +x /mosquitto.sh && /mosquitto.sh ${MQTT_PORT_TCP} ${MQTT_PORT_WEBSOCKET}"
    network_mode: "host"

  postgres:
    image: postgres:14.5
    environment:
      - POSTGRES_USER=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    ports:
      - '${POSTGRES_DATABASE_PORT}:${POSTGRES_DATABASE_PORT}'
    network_mode: "host"
    healthcheck:
      test: pg_isready -U ${POSTGRES_DATABASE_USERNAME}
      interval: 3s
      timeout: 10s
      retries: 5

  mission-database:
    image: ${MISSION_DATABASE_IMAGE}
    command: ["--port", "${DATABASE_API_PORT}",
              "--controller_port", "${DATABASE_CONTROLLER_PORT}",
              "--db_port", "${POSTGRES_DATABASE_PORT}",
              "--db_name", "${POSTGRES_DATABASE_NAME}",
              "--db_username", "${POSTGRES_DATABASE_USERNAME}",
              "--db_password", "${POSTGRES_DATABASE_PASSWORD}"]
    network_mode: "host"
    depends_on:
      postgres:
        condition: service_healthy

  mission-dispatch:
    image: ${MISSION_DISPATCH_IMAGE}
    command: ["--mqtt_port", "${MQTT_PORT_WEBSOCKET}",
              "--mqtt_transport", "${MQTT_TRANSPORT}",
              "--database_url", "http://localhost:${DATABASE_CONTROLLER_PORT}"]
    network_mode: "host"

  mission-simulator:
    image: ${MISSION_SIMULATOR_IMAGE}
    command: ["--robots", "${SIMULATOR_ROBOTS}"]
    network_mode: "host"
    depends_on:
      - mission-dispatch

  dozzle:
    image: ghcr.io/amir20/dozzle:latest
    ports:
      - "8888:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: "host"
    environment:
      - DOZZLE_LEVEL=info

  mqtt-ui:
    image: emqx/mqttx-web
    ports:
      - "9001:80"